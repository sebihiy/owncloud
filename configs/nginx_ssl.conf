user www-data;
worker_processes 4;
pid /run/nginx.pid;
daemon off;

events {
    worker_connections 768;
    # multi_accept on;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";


    # Don't send the nginx version number in error pages and Server header
    server_tokens off;

    upstream php-handler {
        server unix:/var/run/php5-fpm.sock;
    }

    server {
          listen [::]:80 default_server ipv6only=off;

          server_name -x-server-name-x-;

          return 301 https://$server_name$request_uri;
          # Enforce https
    }

    server {
        listen [::]:443 ssl spdy default_server ipv6only=off;

        ssl on;
        ssl_certificate -x-replace-cert-x-;
        ssl_certificate_key -x-replace-key-x-;
        ssl_dhparam /owncloud/dhparam.pem;
        ssl_ecdh_curve secp384r1;

        ssl_session_timeout 5m;

        ## https://github.com/BetterCrypto/Applied-Crypto-Hardening/blob/master/src/configuration/Webservers/nginx/default-hsts
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # not possible to do exclusive
        ssl_ciphers 'EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH:+CAMELLIA256:+AES256:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!ECDSA:CAMELLIA256-SHA:AES256-SHA:CAMELLIA128-SHA:AES128-SHA';
        # add_header Strict-Transport-Security max-age=15768000; # six months
        # use this only if all subdomains support HTTPS!
        add_header Strict-Transport-Security "max-age=15768000; includeSubDomains";

        ## Path to the root of your installation
        root -x-replace-oc-rootpath-;

        ## set max upload size
        client_max_body_size 10G;
        fastcgi_buffers 64 4K;

        rewrite ^/caldav(.*)$ $scheme://$http_host/remote.php/caldav$1 redirect;
        rewrite ^/carddav(.*)$ $scheme://$http_host/remote.php/carddav$1 redirect;
        rewrite ^/webdav(.*)$ $scheme://$http_host/remote.php/webdav$1 redirect;

        index index.php;
        error_page 403 /core/templates/403.php;
        error_page 404 /core/templates/404.php;

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        location ~* ^/(?:staging/|~[^/]+/)?(?:owncloud/)?(?:data|config|\.ht|db_structure\.xml|README) {
            deny all;
        }

        location / {
            ## The following 2 rules are only needed with webfinger
            rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
            rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;

            rewrite ^/.well-known/carddav $scheme://$http_host/remote.php/carddav/ redirect;
            rewrite ^/.well-known/caldav $scheme://$http_host/remote.php/caldav/ redirect;

            rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;

            try_files $uri $uri/ index.php;
        }

        location ~ \.php(?:$|/) {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param HTTPS on;
            fastcgi_pass php-handler;
        }

        ## Optional: set long EXPIRES header on static assets
        location ~* \.(?:jpg|jpeg|gif|bmp|ico|png|css|js|swf)$ {
            expires 30d;
            ## Optional: Don't log access to assets
            access_log off;
        }
    }
}
